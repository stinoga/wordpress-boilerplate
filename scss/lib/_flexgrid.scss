// Philip Walton's flexbox grid
// https://github.com/philipwalton/solved-by-flexbox/blob/master/_sass/components/_grid.scss

.Grid {
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  margin: 0;
  padding: 0;
}

.Grid-cell {
  flex: 1;
}

.Grid--flexCells {
  & > .Grid-cell {
    display: flex;
  }
}

.Grid--top {
  align-items: flex-start;
}

.Grid--bottom {
  align-items: flex-end;
}

.Grid--center {
  align-items: center;
}

.Grid-cell--top {
  align-self: flex-start;
}

.Grid-cell--bottom {
  align-self: flex-end;
}

.Grid-cell--center {
  align-self: center;
}

@mixin grid-sizing($name: "") {
  $sep: "-";
  @if $name == "" {
    $sep: "";
  }
  .#{$name}#{$sep}Grid--fit > .Grid-cell {
    flex: 1;
  }
  .#{$name}#{$sep}Grid--full > .Grid-cell {
    flex: 0 0 100%;
  }
  .#{$name}#{$sep}Grid--1of2 > .Grid-cell {
    flex: 0 0 50%
  }
  .#{$name}#{$sep}Grid--1of3 > .Grid-cell {
    flex: 0 0 33.3333%
  }
  .#{$name}#{$sep}Grid--1of4 > .Grid-cell {
    flex: 0 0 25%
  }
}

// create the default grid-sizing modifiers
@include grid-sizing();

// create grid-sizing modifiers for each breakpoint
@each $breakpoint in $breakpoints {
  $name: nth($breakpoint, 2);
  @include breakpoint($name) {
    @include grid-sizing($name);
  }
}

@mixin grid-gutters($name: "") {
  $sep: "-";
  @if $name == "" {
    $sep: "";
  }
  .#{$name}#{$sep}Grid--gutters {
    margin-left: -1em;
    & > .Grid-cell {
      padding-left: 1em;
    }
  }
  .#{$name}#{$sep}Grid--guttersLarge {
    margin-left: -1.5em;
    & > .Grid-cell {
      padding-left: 1.5em;
    }
  }
  .#{$name}#{$sep}Grid--gutters2x {
    margin-left: -2em;
    & > .Grid-cell {
      padding-left: 2em;
    }
  }
  .#{$name}#{$sep}Grid--gutters3x {
    margin-left: -3em;
    & > .Grid-cell {
      padding-left: 3em;
    }
  }
}

// create the default grid-gutters modifiers
@include grid-gutters();

// create grid-gutters modifiers for each breakpoint
@each $breakpoint in $breakpoints {
  $name: nth($breakpoint, 2);
  @include breakpoint($name) {
    @include grid-gutters($name);
  }
}

// Firefox doesn't yet support multiline Flexboxes so we
// have to fake it. Remove this once this bug is resolved
// https://bugzilla.mozilla.org/show_bug.cgi?id=702508
@supports not (flex-wrap: wrap) {
  .Grid--ffMultilineSupport {
    display: block;
    & > .Grid-cell {
      display: inline-block;
      vertical-align: top;
    }
  }
  @mixin grid-sizing($name: "") {
    $sep: "-";
    @if $name == "" {
      $sep: "";
    }
    .#{$name}#{$sep}Grid--full {
      display: block;
      & > .Grid-cell {
        display: block;
      }
    }
    .#{$name}#{$sep}Grid--fit,
    .#{$name}#{$sep}Grid--1of2,
    .#{$name}#{$sep}Grid--1of3,
    .#{$name}#{$sep}Grid--1of4 {
      display: flex;
    }
  }
  @include grid-sizing();
  @each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 2);
    @include breakpoint($name) {
      @include grid-sizing($name);
    }
  }
}
